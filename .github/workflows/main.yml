name: RMA MacOS
on: [push]

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          DEVELOPER_ID_APPLICATION_BASE64: ${{ secrets.DEVELOPER_ID_APPLICATION_BASE64 }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          DIA_PATH=$RUNNER_TEMP/developer_id_application.p12

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
          echo -n "$DEVELOPER_ID_APPLICATION_BASE64" | base64 --decode --output $DIA_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security import $DIA_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      
      # - name: Build app
      #   run: |
      #     xcodebuild -workspace Run\ My\ App.xcworkspace -scheme "Run My App" -destination platform=macOS build

      - name: "Archive"
        uses: devbotsxyz/xcode-archive@v1
        with:
          workspace: Run My App.xcworkspace
          scheme: Run My App

      - name: "Export & Sign Release Build"
        uses: devbotsxyz/xcode-export-archive@master
        with:
          archive-path: Run My App.xcarchive

      - name: "Notarize Release Build"
        uses: devbotsxyz/xcode-notarize@v1
        with:
          product-path: "Export/Run My App.app"
          appstore-connect-username: ${{ secrets.APPSTORE_CONNECT_USERNAME }}
          appstore-connect-password: ${{ secrets.APPSTORE_CONNECT_PASSWORD }}
          verbose: true

      - name: "Staple Release Build"
        uses: devbotsxyz/xcode-staple@v1
        with:
          product-path: "Export/Run My App.app"

      - name: Package for Distribution
        run: ditto -V -c -k --keepParent "Export/Run My App.app" "Run My App.zip"
